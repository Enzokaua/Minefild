package br.com.enzo.cm.modelo;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class TestJUNIT {
	// LIB JUNIT: A JUNIT É RESPONSAVEL PELA PARTE DE TESTES DE APLICACAO, PARA QUE
	// NAO TENHA QUE SER VERIFICADO ATRAVES DE VARIOS METODOS MAISN
	// ESCREVEMOS TUDOS DE NOSSO MODELO DENTRO DESSA CLASSE, PARA OLHARMOS SE NOSSO
	// MODELO DE PROJETO IRA SEGUIR COM O ESPERADO, O MODELO SERIA MVC (MODEL VIEW
	// CONTROLER)
	// QUE NO NOSSO PROJETO POSSUI O MODELO COMO MODEL, O VISAO COMO VIEW E SENDO A
	// INTERFACE DO USUARIO, E O CONTROLER COMO SENDO AS EXCEPTIONS, SERIA MAIS OU
	// MENOS ESSE O PADRAO
	// MODELO SENDO O PROPOSITO A SER ALCANÇADO, VIEW A INTERFACE, E O CONTROLER
	// SENDO AS EXCEPTIONS, E DENTRO DE TUDO ISSO, O JUNIT REGULA PARA QUE O
	// PROCESSO DO SISTEMA OCORRA DE
	// ACORDO COM O QUE FOI PROPOSTO PELO MODEL

	@Test
	void primeiroTeste() { // O NOME DO TESTE NAO PRECISA SER NECESSARIAMENTE O NOME DA CLASSE

		int a = 1 + 1; // REALIZANDO O PRIMEIRO TESTE, VERIFICANDO SE A SOMA DOS NUMEROS DARIA 2
		assertEquals(2, a); // O ASSERTEQUALS COMPARA OS 2 PARAMETROS DE ENTRADA, ELE VERIFICA O VALOR QUE
							// DEVE ESTAR NA VARIAVEL REFERENCIADA EM SEU SEGUNDO PARAMETRO
		// ASSIM, ELE VERIFICA SE 2 SERIA O VALOR DA VARIAVEL A

	}

}
